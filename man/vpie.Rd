% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vchart-types.R
\name{vpie}
\alias{vpie}
\title{Create a Pie Chart}
\usage{
vpie(
  data,
  mapping,
  dataserie_id = NULL,
  width = NULL,
  height = NULL,
  elementId = NULL
)
}
\arguments{
\item{data}{Can be a \code{data.frame} if function used with other layers functions or a list of parameters for configuring a chart.}

\item{mapping}{Default list of aesthetic mappings to use for chart, only used if \code{data} is a \code{data.frame}.}

\item{dataserie_id}{ID for the serie, can be used to customize the serie with \code{\link[=v_specs]{v_specs()}}.}

\item{width}{Fixed width for widget (in css units). The default is
\code{NULL}, which results in intelligent automatic sizing based on the
widget's container.}

\item{height}{Fixed height for widget (in css units). The default is
\code{NULL}, which results in intelligent automatic sizing based on the
widget's container.}

\item{elementId}{Use an explicit element ID for the widget (rather than an
automatically generated one). Useful if you have other JavaScript that
needs to explicitly discover and interact with a specific widget instance.}
}
\value{
A \code{\link[=vchart]{vchart()}} \code{htmlwidget} object.
}
\description{
Create a Pie Chart
}
\examples{

library(vchartr)

# Bvasic Pie Chart
subset(world_electricity, year == 2023 & type == "total") \%>\%
  vpie(aes(x = source, y = generation))

# Use custom colors
subset(world_electricity, year == 2023 & type == "total") \%>\%
  vpie(aes(x = source, y = generation)) \%>\%
  v_specs_colors_manual(
    "Low carbon" = "#a3be8c",
    "Fossil fuels" = "#4C566A"
  )

# Customize tooltip
subset(world_electricity, year == 2023 & type == "total") \%>\%
  vpie(aes(x = source, y = generation)) \%>\%
  v_specs_tooltip(
    mark = list(
      content = list(
        list(
          key = JS("datum => datum['x']"),
          value = JS("datum => Math.round(datum['y']) + ' TWh'")
        ),
        list(
          hasShape = FALSE,
          key = "Proportion",
          value = JS("datum => datum._percent_ + '\%'")
        )
      )
    )
  )


# Nested Pie Chart
subset(world_electricity, year == 2023) \%>\%
  vpie(aes(x = source, y = generation, group = type), dataserie_id = "pie") \%>\%
  v_specs(
    dataserie_id = "pie_total", # serie_id + '_' + group name
    outerRadius = 0.65,
    innerRadius = 0,
    label = list(
      position = "inside",
      rotate = FALSE,
      style = list(fill = "white")
    ),
    pie = list(
      style = list(
        stroke = "#FFFFFF",
        lineWidth = 2
      )
    )
  ) \%>\%
  v_specs(
    dataserie_id = "pie_detail", # serie_id + '_' + group name
    outerRadius = 0.8,
    innerRadius = 0.67,
    pie = list(
      style = list(
        stroke = "#FFFFFF",
        lineWidth = 2
      )
    )
  )

}
